{"ast":null,"code":"var _jsxFileName = \"/Users/nickboston/Documents/basketball-frontend/src/components/PickColors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"react-modal\";\nimport { nbaLogoMap } from '../util/logos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst useStyles = makeStyles(theme => ({\n  mymodal: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid #ccc',\n    background: '#fff',\n    overflow: 'auto',\n    borderRadius: 20,\n    outline: 'none',\n    padding: '40px 0',\n    width: '700px',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      height: '100%'\n    }\n  },\n  myoverlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)'\n  },\n  modalHeader: {\n    textAlign: 'center',\n    fontFamily: 'Roboto',\n    fontWeight: 500,\n    margin: '20px auto 30px auto',\n    maxWidth: 500,\n    // textTransform:'uppercase',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1.1em'\n    }\n  },\n  logo: {\n    height: 100,\n    width: 100 // marginLeft:'-50%',\n    // marginTop:'-50%',\n\n  },\n  logoContainerColorPicker: {\n    position: 'relative',\n    overflow: 'hidden',\n    width: 100,\n    maxWidth: '100%',\n    height: 100,\n    margin: 'auto',\n    borderRadius: '100%' // border:'5px solid black',\n    // backgroundColor:'#eee',\n\n  },\n  colorPicker: {\n    display: 'block',\n    margin: 'auto',\n    minWidth: 300,\n    height: 'auto'\n  },\n  modalFooter: {\n    display: 'flex',\n    margin: '40px 0 0px',\n    justifyContent: 'center',\n    fontFamily: 'Roboto Mono',\n    fontWeight: 700\n  },\n  buttonStyle: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    fontSize: '1em',\n    fontFamily: 'Roboto',\n    fontWeight: '500',\n    border: 'none',\n    margin: '0 auto',\n    padding: '20px 30px',\n    textTransform: 'uppercase',\n    borderRadius: '50px'\n  },\n  nextButton: {\n    margin: 5,\n    background: 'black',\n    color: 'white',\n    border: '1px solid black'\n  },\n  prevButton: {\n    margin: 5,\n    background: 'white',\n    color: 'black',\n    border: '1px solid black'\n  },\n  cancelButton: {\n    display: 'none',\n    fontSize: '2em',\n    padding: '10px',\n    [theme.breakpoints.down('sm')]: {\n      display: 'inline-block'\n    }\n  }\n}));\nconst PickColors = /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [teamColor, setTeamColor] = useState();\n  const [team, setTeam] = useState(1);\n  const [logo, setLogo] = useState();\n  const [name, setName] = useState(props.awayTeam);\n\n  const handleChangeComplete = color => {\n    setTeamColor(color.hex);\n  }; // const toggleModal = () => {\n  //     setIsOpen(!isOpen);\n  // }\n  // const closeScreen = () => {\n  //     props.setIsOpen(false)\n  // }\n\n\n  const nextScreen = () => {\n    if (team === 2) {\n      props.setHomeColor(teamColor);\n      props.setGameView(true);\n      props.toggleModal();\n    } else {\n      props.setAwayColor(teamColor);\n    }\n\n    setTeam(team + 1);\n    setLogo(props.homeLogo);\n    setName(props.homeTeam);\n  };\n\n  const prevScreen = () => {\n    setTeam(team - 1);\n    setLogo(props.awayLogo);\n    setName(props.awayTeam);\n  };\n\n  const getLogoUrl = teamNum => {\n    const teamName = teamNum === 1 ? props.awayTeam : props.homeTeam;\n\n    if (teamName) {\n      const teamData = nbaLogoMap.find(t => teamName.includes(t.mascot));\n      return teamData.logoURL;\n    }\n\n    return \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: props.isOpen,\n      onRequestClose: props.closeScreen,\n      contentLabel: \"My dialog\",\n      className: classes.mymodal,\n      overlayClassName: classes.myoverlay,\n      closeTimeoutMS: 300,\n      shouldCloseOnOverlayClick: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.cancelButton,\n          onClick: props.closeScreen,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logoContainerColorPicker,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.logo,\n            src: getLogoUrl(team),\n            alt: `${team} logo`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.modalHeader,\n          children: [\"Choose \", name, \" Color\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: teamColor,\n          onChangeComplete: handleChangeComplete,\n          className: classes.colorPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: classes.modalFooter,\n          children: team === 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${classes.buttonStyle} ${classes.nextButton}`,\n            onClick: nextScreen,\n            children: \"NEXT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${classes.buttonStyle} ${classes.prevButton}`,\n              onClick: prevScreen,\n              children: \"BACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 150\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${classes.buttonStyle} ${classes.nextButton}`,\n              onClick: nextScreen,\n              children: \"NEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 251\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 145\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n}, \"zPa3AuzFOvvJE1Ah5TSftntl6PA=\", false, function () {\n  return [useStyles];\n}));\n_c2 = PickColors;\nexport default PickColors;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PickColors$React.memo\");\n$RefreshReg$(_c2, \"PickColors\");","map":{"version":3,"sources":["/Users/nickboston/Documents/basketball-frontend/src/components/PickColors.js"],"names":["React","useState","ChromePicker","makeStyles","Modal","nbaLogoMap","setAppElement","useStyles","theme","mymodal","position","top","left","transform","border","background","overflow","borderRadius","outline","padding","width","breakpoints","down","height","myoverlay","right","bottom","backgroundColor","modalHeader","textAlign","fontFamily","fontWeight","margin","maxWidth","fontSize","logo","logoContainerColorPicker","colorPicker","display","minWidth","modalFooter","justifyContent","buttonStyle","alignItems","cursor","textTransform","nextButton","color","prevButton","cancelButton","PickColors","memo","props","classes","isOpen","setIsOpen","teamColor","setTeamColor","team","setTeam","setLogo","name","setName","awayTeam","handleChangeComplete","hex","nextScreen","setHomeColor","setGameView","toggleModal","setAwayColor","homeLogo","homeTeam","prevScreen","awayLogo","getLogoUrl","teamNum","teamName","teamData","find","t","includes","mascot","logoURL","closeScreen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"react-modal\";\nimport { nbaLogoMap } from '../util/logos'\n\nModal.setAppElement(\"#root\");\n\nconst useStyles = makeStyles((theme) => ({\n    mymodal: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        borderRadius: 20,\n        outline: 'none',\n        padding: '40px 0',\n        width:'700px',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            height: '100%'\n        }\n    },\n    myoverlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    },\n    modalHeader: {\n        textAlign: 'center',\n        fontFamily: 'Roboto',\n        fontWeight:500,\n        margin:'20px auto 30px auto',\n        maxWidth:500,\n        // textTransform:'uppercase',\n        [theme.breakpoints.down('xs')]: {\n            fontSize:'1.1em'\n        }\n    },\n    logo: {\n        height: 100,\n        width: 100,\n        // marginLeft:'-50%',\n        // marginTop:'-50%',\n    },\n    logoContainerColorPicker: {\n        position:'relative',\n        overflow:'hidden',\n        width:100,\n        maxWidth: '100%',\n        height:100,\n        margin:'auto',\n        borderRadius: '100%',\n        // border:'5px solid black',\n        // backgroundColor:'#eee',\n    },\n    colorPicker: {\n        display: 'block',\n        margin: 'auto',\n        minWidth: 300,\n        height: 'auto'\n\n    },\n    modalFooter: {\n        display: 'flex',\n        margin:'40px 0 0px',\n        justifyContent: 'center',\n        fontFamily: 'Roboto Mono',\n        fontWeight: 700\n    },\n    buttonStyle: {\n        display:'inline-flex',\n        alignItems:'center',\n        cursor: 'pointer',\n        fontSize: '1em',\n        fontFamily:'Roboto',\n        fontWeight:'500',\n        border:'none',\n        margin:'0 auto',\n        padding:'20px 30px',\n        textTransform:'uppercase',\n        borderRadius:'50px',\n    },\n    nextButton: {\n        margin:5,\n        background: 'black',\n        color: 'white',\n        border:'1px solid black'\n    },\n    prevButton: {\n        margin:5,\n        background: 'white',\n        color: 'black',\n        border:'1px solid black'\n    },\n    cancelButton: {\n        display: 'none',\n        fontSize: '2em',\n        padding: '10px',\n        [theme.breakpoints.down('sm')]: {\n            display: 'inline-block'\n        }\n    }\n}));\n\nconst PickColors = React.memo((props) => {\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(false);\n    const [teamColor, setTeamColor] = useState()\n    const [team, setTeam] = useState(1)\n    const [logo, setLogo] = useState()\n    const [name, setName] = useState(props.awayTeam)\n\n    const handleChangeComplete = (color) => {\n        setTeamColor(color.hex)\n    }\n\n    // const toggleModal = () => {\n    //     setIsOpen(!isOpen);\n    // }\n\n    // const closeScreen = () => {\n    //     props.setIsOpen(false)\n    // }\n\n    const nextScreen = () => {\n        if (team === 2) {\n            props.setHomeColor(teamColor)\n            props.setGameView(true)\n            props.toggleModal()\n        } else {\n            props.setAwayColor(teamColor)\n        }\n        setTeam(team + 1)\n        setLogo(props.homeLogo)\n        setName(props.homeTeam)\n\n    }\n\n    const prevScreen = () => {\n        setTeam(team - 1)\n        setLogo(props.awayLogo)\n        setName(props.awayTeam)\n    }\n\n    const getLogoUrl = (teamNum) => {\n        const teamName = teamNum === 1 ? props.awayTeam : props.homeTeam\n        if (teamName) {\n            const teamData = nbaLogoMap.find(t => teamName.includes(t.mascot))\n            return teamData.logoURL\n        }\n        return \"\"\n    }\n\n    return (\n        <div className=\"App\">\n\n            <Modal\n                isOpen={props.isOpen}\n                onRequestClose={props.closeScreen}\n                contentLabel=\"My dialog\"\n                className={classes.mymodal}\n                overlayClassName={classes.myoverlay}\n                closeTimeoutMS={300}\n                shouldCloseOnOverlayClick={true}\n            >\n                <div>\n                    <div className={classes.cancelButton} onClick={props.closeScreen}>X</div>\n                    <div className={classes.logoContainerColorPicker}>\n                        <img className={classes.logo} src={getLogoUrl(team)} alt={`${team} logo`} ></img>\n                    </div>\n                    <h1 className={classes.modalHeader}>Choose {name} Color</h1>\n\n                    <ChromePicker\n                        color={teamColor}\n                        onChangeComplete={handleChangeComplete}\n                        className={classes.colorPicker}\n                    />\n                    <footer className={classes.modalFooter}>\n                        {(team === 1) ? <button className={`${classes.buttonStyle} ${classes.nextButton}`} onClick={nextScreen}>NEXT</button> : <div><button className={`${classes.buttonStyle} ${classes.prevButton}`} onClick={prevScreen}>BACK</button><button className={`${classes.buttonStyle} ${classes.nextButton}`} onClick={nextScreen}>NEXT</button></div>}\n                    </footer>\n                </div>\n            </Modal>\n        </div>\n    )\n})\n\nexport default PickColors\n"]},"metadata":{},"sourceType":"module"}