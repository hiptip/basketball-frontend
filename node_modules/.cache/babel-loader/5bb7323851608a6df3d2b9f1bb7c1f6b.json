{"ast":null,"code":"var _jsxFileName = \"/Users/nickboston/Documents/basketball-frontend/src/components/PickSingleColor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"react-modal\";\nimport { nbaLogoMap } from '../util/logos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\nconst useStyles = makeStyles(theme => ({\n  mymodal: {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid #ccc',\n    background: '#fff',\n    overflow: 'auto',\n    borderRadius: 20,\n    outline: 'none',\n    padding: '40px 0',\n    width: '700px',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      height: '100%'\n    }\n  },\n  myoverlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.75)'\n  },\n  modalHeader: {\n    textAlign: 'center',\n    fontFamily: 'Roboto Mono',\n    margin: '20px auto 30px auto',\n    maxWidth: 500,\n    textTransform: 'uppercase',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: '1.1em'\n    }\n  },\n  logo: {\n    height: 100,\n    width: 100 // marginLeft:'-50%',\n    // marginTop:'-50%',\n\n  },\n  logoContainerColorPicker: {\n    position: 'relative',\n    overflow: 'hidden',\n    width: 100,\n    maxWidth: '100%',\n    height: 100,\n    margin: 'auto',\n    borderRadius: '100%' // border:'5px solid black',\n    // backgroundColor:'#eee',\n\n  },\n  colorPicker: {\n    display: 'block',\n    margin: 'auto',\n    minWidth: 300,\n    height: 'auto'\n  },\n  modalFooter: {\n    display: 'flex',\n    margin: '40px 0 0px',\n    justifyContent: 'center',\n    fontFamily: 'Roboto Mono',\n    fontWeight: 700\n  },\n  nextButton: {\n    padding: '15px 30px',\n    cursor: 'pointer',\n    fontFamily: 'Roboto Mono',\n    margin: 5,\n    borderStyle: 'solid',\n    borderWidth: '1',\n    borderColor: 'black',\n    borderRadius: 100,\n    background: 'black',\n    color: 'white',\n    fontSize: '1em',\n    fontWeight: 'bold'\n  },\n  prevButton: {\n    padding: '15px 30px',\n    cursor: 'pointer',\n    fontFamily: 'Roboto Mono',\n    margin: 5,\n    borderStyle: 'solid',\n    borderWidth: '1',\n    borderColor: 'black',\n    borderRadius: 100,\n    background: 'white',\n    color: 'black',\n    fontSize: '1em',\n    fontWeight: 'bold'\n  }\n}));\nconst PickSingleColor = /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [teamColor, setTeamColor] = useState(props.initialColor); // const [team, setTeam] = useState(1)\n  // const [logo, setLogo] = useState()\n\n  const handleChangeComplete = color => {\n    setTeamColor(color.hex);\n  }; // const toggleModal = () => {\n  //     setIsOpen(!isOpen);\n  // }\n  // const closeScreen = () => {\n  //     props.setIsOpen(false)\n  // }\n  // const nextScreen = () => {\n  //     if (team === 2) {\n  //         props.setHomeColor(teamColor)\n  //         props.setGameView(true)\n  //         props.toggleModal()\n  //     } else {\n  //         props.setAwayColor(teamColor)\n  //     }\n  //     setTeam(team + 1)\n  //     setLogo(props.homeLogo)\n  //     setName(props.homeTeam)\n  // }\n  // const prevScreen = () => {\n  //     setTeam(team - 1)\n  //     setLogo(props.awayLogo)\n  //     setName(props.awayTeam)\n  // }\n\n\n  const getLogoUrl = teamName => {\n    if (teamName) {\n      const teamData = nbaLogoMap.find(t => teamName.includes(t.mascot));\n      return teamData.logoURL;\n    }\n\n    return \"\";\n  };\n\n  const setColor = () => {\n    props.team === \"home\" ? props.setHomeColor(teamColor) : props.setAwayColor(teamColor);\n    props.closeScreen();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: props.isOpen,\n      onRequestClose: props.closeScreen,\n      contentLabel: \"My dialog\",\n      className: classes.mymodal,\n      overlayClassName: classes.myoverlay,\n      closeTimeoutMS: 300,\n      shouldCloseOnOverlayClick: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: classes.logoContainerColorPicker,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.logo,\n            src: getLogoUrl(props.team === \"home\" ? props.homeTeam : props.awayTeam),\n            alt: `${props.team} logo`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.modalHeader,\n          children: [\"Choose \", props.team === \"home\" ? props.homeTeam : props.awayTeam, \" Color\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ChromePicker, {\n          color: teamColor,\n          onChangeComplete: handleChangeComplete,\n          className: classes.colorPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: classes.modalFooter,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.nextButton,\n            onClick: setColor,\n            children: \"SET COLOR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}, \"Wh18Nh3zlx6AO3jurGyLqYYz6xg=\", false, function () {\n  return [useStyles];\n}));\n_c2 = PickSingleColor;\nexport default PickSingleColor;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PickSingleColor$React.memo\");\n$RefreshReg$(_c2, \"PickSingleColor\");","map":{"version":3,"sources":["/Users/nickboston/Documents/basketball-frontend/src/components/PickSingleColor.js"],"names":["React","useState","ChromePicker","makeStyles","Modal","nbaLogoMap","setAppElement","useStyles","theme","mymodal","position","top","left","transform","border","background","overflow","borderRadius","outline","padding","width","breakpoints","down","height","myoverlay","right","bottom","backgroundColor","modalHeader","textAlign","fontFamily","margin","maxWidth","textTransform","fontSize","logo","logoContainerColorPicker","colorPicker","display","minWidth","modalFooter","justifyContent","fontWeight","nextButton","cursor","borderStyle","borderWidth","borderColor","color","prevButton","PickSingleColor","memo","props","classes","isOpen","setIsOpen","teamColor","setTeamColor","initialColor","handleChangeComplete","hex","getLogoUrl","teamName","teamData","find","t","includes","mascot","logoURL","setColor","team","setHomeColor","setAwayColor","closeScreen","homeTeam","awayTeam"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"react-modal\";\nimport { nbaLogoMap } from '../util/logos'\n\nModal.setAppElement(\"#root\");\n\nconst useStyles = makeStyles((theme) => ({\n    mymodal: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        border: '1px solid #ccc',\n        background: '#fff',\n        overflow: 'auto',\n        borderRadius: 20,\n        outline: 'none',\n        padding: '40px 0',\n        width:'700px',\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            height: '100%'\n        }\n    },\n    myoverlay: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n    },\n    modalHeader: {\n        textAlign: 'center',\n        fontFamily: 'Roboto Mono',\n        margin:'20px auto 30px auto',\n        maxWidth:500,\n        textTransform:'uppercase',\n        [theme.breakpoints.down('xs')]: {\n            fontSize:'1.1em'\n        }\n    },\n    logo: {\n        height: 100,\n        width: 100,\n        // marginLeft:'-50%',\n        // marginTop:'-50%',\n    },\n    logoContainerColorPicker: {\n        position:'relative',\n        overflow:'hidden',\n        width:100,\n        maxWidth: '100%',\n        height:100,\n        margin:'auto',\n        borderRadius: '100%',\n        // border:'5px solid black',\n        // backgroundColor:'#eee',\n    },\n    colorPicker: {\n        display: 'block',\n        margin: 'auto',\n        minWidth: 300,\n        height: 'auto'\n\n    },\n    modalFooter: {\n        display: 'flex',\n        margin:'40px 0 0px',\n        justifyContent: 'center',\n        fontFamily: 'Roboto Mono',\n        fontWeight: 700\n    },\n    nextButton: {\n        padding:'15px 30px',\n        cursor:'pointer',\n        fontFamily:'Roboto Mono',\n        margin:5,\n        borderStyle: 'solid',\n        borderWidth: '1',\n        borderColor: 'black',\n        borderRadius: 100,\n        background: 'black',\n        color: 'white',\n        fontSize:'1em',\n        fontWeight:'bold'\n    },\n    prevButton: {\n        padding:'15px 30px',\n        cursor:'pointer',\n        fontFamily:'Roboto Mono',\n        margin:5,\n        borderStyle: 'solid',\n        borderWidth: '1',\n        borderColor: 'black',\n        borderRadius: 100,\n        background: 'white',\n        color: 'black',\n        fontSize:'1em',\n        fontWeight:'bold'\n    }\n}));\n\nconst PickSingleColor = React.memo((props) => {\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(false);\n    const [teamColor, setTeamColor] = useState(props.initialColor)\n    // const [team, setTeam] = useState(1)\n    // const [logo, setLogo] = useState()\n\n    const handleChangeComplete = (color) => {\n        setTeamColor(color.hex)\n    }\n\n    // const toggleModal = () => {\n    //     setIsOpen(!isOpen);\n    // }\n\n    // const closeScreen = () => {\n    //     props.setIsOpen(false)\n    // }\n\n    // const nextScreen = () => {\n    //     if (team === 2) {\n    //         props.setHomeColor(teamColor)\n    //         props.setGameView(true)\n    //         props.toggleModal()\n    //     } else {\n    //         props.setAwayColor(teamColor)\n    //     }\n    //     setTeam(team + 1)\n    //     setLogo(props.homeLogo)\n    //     setName(props.homeTeam)\n\n    // }\n\n    // const prevScreen = () => {\n    //     setTeam(team - 1)\n    //     setLogo(props.awayLogo)\n    //     setName(props.awayTeam)\n    // }\n\n    const getLogoUrl = (teamName) => {\n        if (teamName) {\n            const teamData = nbaLogoMap.find(t => teamName.includes(t.mascot))\n            return teamData.logoURL\n        }\n        return \"\"\n    }\n\n    const setColor = () => {\n        (props.team === \"home\") ? props.setHomeColor(teamColor) : props.setAwayColor(teamColor)\n        props.closeScreen()\n    } \n\n    return (\n        <div className=\"App\">\n\n            <Modal\n                isOpen={props.isOpen}\n                onRequestClose={props.closeScreen}\n                contentLabel=\"My dialog\"\n                className={classes.mymodal}\n                overlayClassName={classes.myoverlay}\n                closeTimeoutMS={300}\n                shouldCloseOnOverlayClick={true}\n            >\n                <div>\n                    <div class={classes.logoContainerColorPicker}>\n                    <img className={classes.logo} src={getLogoUrl((props.team === \"home\") ? props.homeTeam : props.awayTeam)} alt={`${props.team} logo`}></img>\n                    </div>\n                    <h1 className={classes.modalHeader}>Choose {(props.team === \"home\") ? props.homeTeam : props.awayTeam} Color</h1>\n                    <ChromePicker\n                        color={teamColor}\n                        onChangeComplete={handleChangeComplete}\n                        className={classes.colorPicker}\n                    />\n                    <footer className={classes.modalFooter}>\n                        <button className={classes.nextButton} onClick={setColor}>SET COLOR</button>\n                        {/* {(team === 1) ? <button className={classes.nextButton} onClick={nextScreen}>NEXT</button> : <div><button className={classes.prevButton} onClick={prevScreen}>BACK</button><button className={classes.nextButton} onClick={nextScreen}>NEXT</button></div>} */}\n                    </footer>\n                </div>\n            </Modal>\n        </div>\n    )\n})\n\nexport default PickSingleColor\n"]},"metadata":{},"sourceType":"module"}