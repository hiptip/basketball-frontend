{"ast":null,"code":"var _jsxFileName = \"/Users/nickboston/Documents/basketball-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getMainColor, getFullName } from 'nba-color';\nimport ConnectHue from './components/ConnectHue';\nimport LiveGames from './components/LiveGames';\nimport { RGBtoXY, getGradientColor, hexToRgb } from './util/colorFunctions';\nimport PickColors from './components/PickColors';\nimport \"./styles.css\";\nimport GamePage from './components/GamePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [homeColor, setHomeColor] = useState(\"#1271ff\");\n  const [awayColor, setAwayColor] = useState(\"#009e05\");\n  const [neutralColor, setNeutralColor] = useState([247, 232, 195]);\n  const [currentIntervalId, setCurrentIntervalId] = useState();\n  const [lightColorHex, setLightColorHex] = useState(\"#f7e8c3\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [hueConfigured, setHueConfigured] = useState(false);\n  const [hueUsername, setHueUsername] = useState(); //\"rpFOVnRT3f3nX484o6arbY-HzrnjjObfsihT3n82\"\n\n  const [bridgeIp, setBridgeIp] = useState();\n  const [liveGames, setLiveGames] = useState([]);\n  const [homeTeam, setHomeTeam] = useState();\n  const [awayTeam, setAwayTeam] = useState();\n  const [timeStamp, setTimeStamp] = useState('');\n  const [delay, setDelay] = useState(30000);\n  const [checkedLights, setCheckedLights] = useState([]);\n  const [gameView, setGameView] = useState(false);\n  const [singleGameData, setSingleGameData] = useState({});\n  const [lights, setLights] = useState({}); // const handleClick = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  window.addEventListener(\"beforeunload\", function (e) {\n    // Reset lights to previous values\n    for (const [key, value] of Object.entries(lights)) {\n      var light = key;\n      var x = lights[light].state.xy[0];\n      var y = lights[light].state.xy[1];\n      setColor(x, y, light);\n    }\n  }, false);\n\n  const getAllGames = () => {\n    fetch('/games?' + new URLSearchParams({\n      delay: delay\n    })).then(response => response.json()).then(response => {\n      setLiveGames(response);\n    });\n  }; // const getGameScore = () => {\n  //   console.log(timeStamp)\n  //   fetch('/games?' + new URLSearchParams({\n  //     homeTeam: homeTeam,\n  //     delay: delay,\n  //     // timeStamp: timeStamp\n  //   }))\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       if (response[0]) {\n  //         // setTimeStamp(response[0].timeStamp) @TODO\n  //         return scoreToXY(parseInt(response[0].homeScore), parseInt(response[0].awayScore))\n  //       }\n  //     }) //calculate color from scores\n  //     .then(colorXY => {\n  //       setColor(colorXY[0], colorXY[1])\n  //     }) //set color   \n  // }\n\n\n  const controlLights = game => {\n    if (game) {\n      let colorXY = scoreToXY(parseInt(game.homeScore), parseInt(game.awayScore));\n      setColor(colorXY[0], colorXY[1], checkedLights); //seems like this isn't actually updating\n    }\n  };\n\n  const scoreToXY = (hScore, vScore) => {\n    const neutralHex = \"#FFC94A\";\n\n    if (hScore === vScore) {\n      return RGBtoXY(neutralColor[0], neutralColor[1], neutralColor[2]);\n    }\n\n    if (hScore > vScore) {\n      let diff = hScore - vScore;\n      let percent = diff / 20;\n      let gradientColor = getGradientColor(neutralHex, homeColor, percent); //update this\n\n      setLightColorHex(gradientColor);\n      let rgb = hexToRgb(gradientColor);\n\n      if (rgb) {\n        return RGBtoXY(rgb.r, rgb.g, rgb.b);\n      }\n    }\n\n    if (hScore < vScore) {\n      let diff = vScore - hScore;\n      let percent = diff / 20;\n      let gradientColor = getGradientColor(neutralHex, awayColor, percent); //update this\n\n      setLightColorHex(gradientColor);\n      let rgb = hexToRgb(gradientColor);\n\n      if (rgb) {\n        return RGBtoXY(rgb.r, rgb.g, rgb.b);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // check local storage for hue username\n    let username = localStorage.getItem(\"hueUsername\");\n\n    if (username) {\n      setHueUsername(username);\n    }\n  }, []);\n  useEffect(() => {\n    if (gameView) {\n      var singleGame = liveGames.find(game => game.homeTeam === homeTeam);\n      controlLights(singleGame, checkedLights);\n    }\n  }, [liveGames]);\n  useEffect(() => {\n    //update this logic\n    gamePolling();\n  }, [hueConfigured, delay]);\n\n  const setColor = (x, y, lights) => {\n    for (let [index, val] of lights.entries()) {\n      fetch(`http://${bridgeIp}/api/${hueUsername}/lights/${val}/state`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          \"xy\": [x, y]\n        })\n      });\n    }\n  }; // const gamePolling = () => {\n  //   if (currentIntervalId) {\n  //     clearInterval(currentIntervalId)\n  //   }\n  //   var intId = setInterval(() => {\n  //     getAllGames()\n  //   }, 6000)\n  //   setCurrentIntervalId(intId)\n  // }\n\n\n  const gamePolling = () => {\n    if (currentIntervalId) {\n      clearInterval(currentIntervalId);\n    }\n\n    var intId = setInterval(() => {\n      getAllGames();\n    }, 2000);\n    setCurrentIntervalId(intId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!hueConfigured && /*#__PURE__*/_jsxDEV(ConnectHue, {\n      setHueUsername: setHueUsername,\n      setHueConfigured: setHueConfigured,\n      hueUsername: hueUsername,\n      setCheckedLights: setCheckedLights,\n      setBridgeIp: setBridgeIp,\n      bridgeIp: bridgeIp,\n      setLights: setLights\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 26\n    }, this), hueConfigured && !gameView && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(LiveGames, {\n        lightColorHex: lightColorHex,\n        liveGames: liveGames,\n        setHomeTeam: setHomeTeam,\n        setAwayTeam: setAwayTeam,\n        setAwayColor: setAwayColor,\n        setHomeColor: setHomeColor,\n        awayTeam: awayTeam,\n        homeTeam: homeTeam,\n        setGameView: setGameView,\n        setSingleGameData: setSingleGameData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PickColors, {\n        setAwayColor: setAwayColor,\n        setHomeColor: setHomeColor,\n        awayTeam: awayTeam,\n        homeTeam: homeTeam,\n        setGameView: setGameView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), hueConfigured && gameView && /*#__PURE__*/_jsxDEV(GamePage, {\n      setDelay: setDelay,\n      setIntervalId: setCurrentIntervalId,\n      intervalId: currentIntervalId,\n      delay: delay,\n      homeTeam: homeTeam,\n      awayTeam: awayTeam,\n      homeColor: homeColor,\n      awayColor: awayColor,\n      liveGames: liveGames,\n      setGameView: setGameView,\n      gameView: gameView,\n      lightColorHex: lightColorHex,\n      setHomeColor: setHomeColor,\n      setAwayColor: setAwayColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"vpVPILpMs3x6L45TlG+++okKcHU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nickboston/Documents/basketball-frontend/src/App.js"],"names":["React","useState","useEffect","getMainColor","getFullName","ConnectHue","LiveGames","RGBtoXY","getGradientColor","hexToRgb","PickColors","GamePage","App","homeColor","setHomeColor","awayColor","setAwayColor","neutralColor","setNeutralColor","currentIntervalId","setCurrentIntervalId","lightColorHex","setLightColorHex","anchorEl","setAnchorEl","hueConfigured","setHueConfigured","hueUsername","setHueUsername","bridgeIp","setBridgeIp","liveGames","setLiveGames","homeTeam","setHomeTeam","awayTeam","setAwayTeam","timeStamp","setTimeStamp","delay","setDelay","checkedLights","setCheckedLights","gameView","setGameView","singleGameData","setSingleGameData","lights","setLights","window","addEventListener","e","key","value","Object","entries","light","x","state","xy","y","setColor","getAllGames","fetch","URLSearchParams","then","response","json","controlLights","game","colorXY","scoreToXY","parseInt","homeScore","awayScore","hScore","vScore","neutralHex","diff","percent","gradientColor","rgb","r","g","b","username","localStorage","getItem","singleGame","find","gamePolling","index","val","method","body","JSON","stringify","clearInterval","intId","setInterval"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { getMainColor, getFullName } from 'nba-color';\nimport ConnectHue from './components/ConnectHue'\nimport LiveGames from './components/LiveGames';\nimport { RGBtoXY, getGradientColor, hexToRgb } from './util/colorFunctions'\nimport PickColors from './components/PickColors';\nimport \"./styles.css\";\nimport GamePage from './components/GamePage';\n\nconst App = () => {\n  const [homeColor, setHomeColor] = useState(\"#1271ff\")\n  const [awayColor, setAwayColor] = useState(\"#009e05\")\n  const [neutralColor, setNeutralColor] = useState([247, 232, 195])\n  const [currentIntervalId, setCurrentIntervalId] = useState()\n  const [lightColorHex, setLightColorHex] = useState(\"#f7e8c3\")\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [hueConfigured, setHueConfigured] = useState(false)\n  const [hueUsername, setHueUsername] = useState() //\"rpFOVnRT3f3nX484o6arbY-HzrnjjObfsihT3n82\"\n  const [bridgeIp, setBridgeIp] = useState()\n  const [liveGames, setLiveGames] = useState([])\n  const [homeTeam, setHomeTeam] = useState()\n  const [awayTeam, setAwayTeam] = useState()\n  const [timeStamp, setTimeStamp] = useState('')\n  const [delay, setDelay] = useState(30000)\n  const [checkedLights, setCheckedLights] = useState([])\n  const [gameView, setGameView] = useState(false)\n  const [singleGameData, setSingleGameData] = useState({})\n  const [lights, setLights] = useState({})\n\n  // const handleClick = (event) => {\n  //   setAnchorEl(event.currentTarget);\n  // };\n\n  // const handleClose = () => {\n  //   setAnchorEl(null);\n  // };\n\n  window.addEventListener(\"beforeunload\", function(e){\n    // Reset lights to previous values\n    for (const [key, value] of Object.entries(lights)) {\n      var light = key;\n      var x = lights[light].state.xy[0]\n      var y = lights[light].state.xy[1]\n      setColor(x, y, light)\n    }\n }, false);\n\n  const getAllGames = () => {\n    fetch('/games?' + new URLSearchParams({\n      delay: delay,\n    }))\n      .then(response => response.json())\n      .then(response => {\n        setLiveGames(response)\n      })\n  }\n\n  // const getGameScore = () => {\n  //   console.log(timeStamp)\n  //   fetch('/games?' + new URLSearchParams({\n  //     homeTeam: homeTeam,\n  //     delay: delay,\n  //     // timeStamp: timeStamp\n  //   }))\n  //     .then(response => response.json())\n  //     .then(response => {\n  //       if (response[0]) {\n  //         // setTimeStamp(response[0].timeStamp) @TODO\n  //         return scoreToXY(parseInt(response[0].homeScore), parseInt(response[0].awayScore))\n  //       }\n  //     }) //calculate color from scores\n  //     .then(colorXY => {\n  //       setColor(colorXY[0], colorXY[1])\n  //     }) //set color   \n  // }\n\n  const controlLights = (game) => {\n    if (game) {\n      let colorXY = scoreToXY(parseInt(game.homeScore), parseInt(game.awayScore))\n      setColor(colorXY[0], colorXY[1], checkedLights) //seems like this isn't actually updating\n    }\n  }\n\n  const scoreToXY = (hScore, vScore) => {\n    const neutralHex = \"#FFC94A\"\n    if (hScore === vScore) {\n      return RGBtoXY(neutralColor[0], neutralColor[1], neutralColor[2])\n    }\n    if (hScore > vScore) {\n      let diff = hScore - vScore\n      let percent = diff / 20\n      let gradientColor = getGradientColor(neutralHex, homeColor, percent) //update this\n      setLightColorHex(gradientColor)\n      let rgb = hexToRgb(gradientColor)\n      if (rgb) {\n        return RGBtoXY(rgb.r, rgb.g, rgb.b)\n      }\n    }\n    if (hScore < vScore) {\n      let diff = vScore - hScore\n      let percent = diff / 20\n      let gradientColor = getGradientColor(neutralHex, awayColor, percent) //update this\n      setLightColorHex(gradientColor)\n      let rgb = hexToRgb(gradientColor)\n      if (rgb) {\n        return RGBtoXY(rgb.r, rgb.g, rgb.b)\n      }\n    }\n  }\n\n\n  useEffect(() => {\n    // check local storage for hue username\n    let username = localStorage.getItem(\"hueUsername\")\n    if (username) {\n      setHueUsername(username)\n    }\n  }, []);\n\n  useEffect(() => {\n    if (gameView) {\n      var singleGame = liveGames.find(game => game.homeTeam === homeTeam)\n      controlLights(singleGame, checkedLights)\n    }\n  }, [liveGames])\n\n  useEffect(() => { //update this logic\n    gamePolling()\n  }, [hueConfigured, delay])\n\n  const setColor = (x, y, lights) => {\n    for (let [index, val] of lights.entries()) {\n      fetch(`http://${bridgeIp}/api/${hueUsername}/lights/${val}/state`, { \n        method: 'PUT',\n        body: JSON.stringify({ \"xy\": [x, y] })\n      })\n    }\n\n  }\n\n  // const gamePolling = () => {\n  //   if (currentIntervalId) {\n  //     clearInterval(currentIntervalId)\n  //   }\n  //   var intId = setInterval(() => {\n  //     getAllGames()\n  //   }, 6000)\n  //   setCurrentIntervalId(intId)\n  // }\n\n  const gamePolling = () => {\n    if (currentIntervalId) {\n      clearInterval(currentIntervalId)\n    }\n    var intId = setInterval(() => {\n      getAllGames()\n    }, 2000)\n    setCurrentIntervalId(intId)\n  }\n\n  return (\n    <div>\n      {!hueConfigured && <ConnectHue setHueUsername={setHueUsername} setHueConfigured={setHueConfigured} hueUsername={hueUsername} setCheckedLights={setCheckedLights} setBridgeIp={setBridgeIp} bridgeIp={bridgeIp} setLights={setLights} />}\n      { (hueConfigured && !gameView) &&\n        <div className=\"App\">\n          <LiveGames lightColorHex={lightColorHex} liveGames={liveGames} setHomeTeam={setHomeTeam} setAwayTeam={setAwayTeam} setAwayColor={setAwayColor} setHomeColor={setHomeColor} awayTeam={awayTeam} homeTeam={homeTeam} setGameView={setGameView} setSingleGameData={setSingleGameData} />\n          <PickColors setAwayColor={setAwayColor} setHomeColor={setHomeColor} awayTeam={awayTeam} homeTeam={homeTeam} setGameView={setGameView} />\n        </div>\n      }\n      { (hueConfigured && gameView) &&\n        <GamePage setDelay={setDelay} setIntervalId={setCurrentIntervalId} intervalId={currentIntervalId} delay={delay} homeTeam={homeTeam} awayTeam={awayTeam} homeColor={homeColor} awayColor={awayColor} liveGames={liveGames} setGameView={setGameView} gameView={gameView} lightColorHex={lightColorHex} setHomeColor={setHomeColor} setAwayColor={setAwayColor} />\n      }\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}