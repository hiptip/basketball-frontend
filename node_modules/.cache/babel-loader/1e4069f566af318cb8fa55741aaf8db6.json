{"ast":null,"code":"var _jsxFileName = \"/Users/nickboston/Documents/basketball-frontend/src/components/NbaGameCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from '@material-ui/core/Grid';\nimport PickColors from './PickColors';\nimport { nbaLogoMap } from '../util/logos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // position: 'absolute',\n    width: 750,\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(95% - 24px)'\n    },\n    padding: '30px 20px',\n    marginBottom: 20,\n    boxShadow: '0px 0px 0px rgba(255, 255, 255, 1)',\n    borderRadius: 20,\n    backgroundColor: 'rgba(255,255,255,.1)',\n    border: '2px solid rgba(255,255,255,0)',\n    fontFamily: 'Roboto Mono',\n    fontStyle: 'normal',\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    [theme.breakpoints.up('sm')]: {\n      '&:hover': {\n        border: '2px solid rgba(255,255,255,1)',\n        boxShadow: '0px 0px 20px rgba(255, 255, 255, .6), inset 0px 0px 20px rgba(255, 255, 255, .4)',\n        transform: 'scale(1.01)',\n        transition: 'all .2s ease-out'\n      }\n    }\n  },\n  center: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  teamNameAway: {\n    fontFamily: 'Roboto Mono',\n    fontSize: 16,\n    color: 'white',\n    textTransform: 'uppercase',\n    margin: 0,\n    marginLeft: 10,\n    textAlign: 'left'\n  },\n  scoreAway: {\n    fontFamily: 'Roboto Mono',\n    fontSize: 52,\n    margin: 0,\n    color: 'white',\n    marginLeft: 10,\n    textAlign: 'left',\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 32\n    }\n  },\n  teamNameHome: {\n    fontFamily: 'Roboto Mono',\n    textTransform: 'uppercase',\n    fontSize: 16,\n    color: 'white',\n    margin: 0,\n    marginRight: 10,\n    textAlign: 'right'\n  },\n  scoreHome: {\n    fontFamily: 'Roboto Mono',\n    fontSize: 50,\n    color: 'white',\n    margin: 0,\n    marginRight: 10,\n    textAlign: 'right',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 32\n    }\n  },\n  centerSpread: {\n    alignItems: 'center',\n    padding: 20,\n    color: 'white',\n    // borderRadius:20,\n    // background:'rgba(255,255,255,.1)',\n    borderRight: '1px solid white',\n    borderLeft: '1px solid white',\n    display: 'block'\n  },\n  quarter: {\n    margin: 0,\n    fontFamily: 'roboto'\n  },\n  timeRemaining: {\n    margin: 0,\n    marginTop: 10\n  },\n  stats: {\n    display: 'inline-block',\n    width: '100%'\n  },\n  vl: {\n    position: 'relative',\n    borderLeft: '2px solid #EFEFEF',\n    height: 15.5,\n    left: '50%'\n  },\n  logo: {\n    height: 200,\n    width: 200,\n    marginLeft: '-50%',\n    marginTop: '-50%',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    }\n  },\n  logoContainer: {\n    position: 'relative',\n    overflow: 'hidden',\n    width: 100,\n    maxWidth: '100%',\n    height: 100,\n    borderRadius: '100%',\n    // border:'5px solid black',\n    backgroundColor: 'rgba(255,255,255,.2)',\n    [theme.breakpoints.down('xs')]: {\n      width: 20,\n      height: 20 // backgroundColor: props.lightColorHex,\n\n    }\n  }\n}));\n\nconst NbaGameCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(false); // const routes = {\n  //     '/': () => <Home />,\n  //     '/teamOneColor': () => <SetColor />,\n  //     '/teamTwoColor': () => <SetColor />,\n  // };\n  // const routeResults = useRoutes(routes);\n\n  const toggleModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeScreen = () => {\n    setIsOpen(false);\n  };\n\n  const getShortName = teamName => {\n    const teamData = nbaLogoMap.find(team => teamName.includes(team.mascot));\n    return teamData.short;\n  };\n\n  const setTeams = (hTeam, aTeam) => {\n    toggleModal();\n    props.setHomeTeam(hTeam);\n    props.setAwayTeam(aTeam);\n    props.setSingleGameData({\n      //change this logic -- we need to get the info from all games and search for specfiic game there @TODO\n      homeTeam: props.homeTeam,\n      awayTeam: props.awayTeam,\n      homeScore: props.homeScore,\n      awayScore: props.awayScore,\n      gameTime: props.gameTime\n    });\n  };\n\n  const getLogoUrl = teamName => {\n    const team = nbaLogoMap.find(team => teamName.includes(team.mascot));\n    return team.logoURL;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.center,\n      onClick: () => setTeams(props.homeTeam, props.awayTeam),\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logoContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.logo,\n            src: getLogoUrl(props.awayTeam)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.stats,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.teamNameAway,\n            children: getShortName(props.awayTeam)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.scoreAway,\n            children: props.awayScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.centerSpread,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.quarter,\n            children: [props.quarter, \"Q | \", props.minutesRemaining, \":\", props.secondsRemaining > 9 ? props.secondsRemaining : '0' + props.secondsRemaining]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.stats,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.teamNameHome,\n            children: getShortName(props.homeTeam)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.scoreHome,\n            children: props.homeScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logoContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.logo,\n            src: getLogoUrl(props.homeTeam)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PickColors, {\n      toggleModal: toggleModal,\n      isOpen: isOpen,\n      closeScreen: closeScreen,\n      setAwayColor: props.setAwayColor,\n      setHomeColor: props.setHomeColor,\n      awayTeam: props.awayTeam,\n      homeTeam: props.homeTeam,\n      setGameView: props.setGameView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NbaGameCard, \"zUXo6CE57GpvTbN904t8b5soju0=\", false, function () {\n  return [useStyles];\n});\n\n_c = NbaGameCard;\nexport default NbaGameCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NbaGameCard\");","map":{"version":3,"sources":["/Users/nickboston/Documents/basketball-frontend/src/components/NbaGameCard.js"],"names":["React","useState","useEffect","makeStyles","Card","CardActionArea","CardContent","Typography","Grid","PickColors","nbaLogoMap","useStyles","theme","root","width","breakpoints","down","padding","marginBottom","boxShadow","borderRadius","backgroundColor","border","fontFamily","fontStyle","fontWeight","cursor","up","transform","transition","center","display","alignItems","justifyContent","teamNameAway","fontSize","color","textTransform","margin","marginLeft","textAlign","scoreAway","teamNameHome","marginRight","scoreHome","centerSpread","borderRight","borderLeft","quarter","timeRemaining","marginTop","stats","vl","position","height","left","logo","logoContainer","overflow","maxWidth","NbaGameCard","props","classes","isOpen","setIsOpen","toggleModal","closeScreen","getShortName","teamName","teamData","find","team","includes","mascot","short","setTeams","hTeam","aTeam","setHomeTeam","setAwayTeam","setSingleGameData","homeTeam","awayTeam","homeScore","awayScore","gameTime","getLogoUrl","logoURL","minutesRemaining","secondsRemaining","setAwayColor","setHomeColor","setGameView"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from '@material-ui/core/Grid';\nimport PickColors from './PickColors';\nimport { nbaLogoMap } from '../util/logos'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        // position: 'absolute',\n        width: 750,\n        [theme.breakpoints.down('sm')]: {\n            width: 'calc(95% - 24px)',\n        },\n        padding:'30px 20px',\n        marginBottom:20,\n        boxShadow: '0px 0px 0px rgba(255, 255, 255, 1)',\n        borderRadius: 20,\n        backgroundColor: 'rgba(255,255,255,.1)',\n        border: '2px solid rgba(255,255,255,0)',\n        fontFamily: 'Roboto Mono',\n        fontStyle: 'normal',\n        fontWeight: 'bold',\n        cursor:'pointer',\n        [theme.breakpoints.up('sm')]: {\n            '&:hover': {\n                border: '2px solid rgba(255,255,255,1)',\n                boxShadow: '0px 0px 20px rgba(255, 255, 255, .6), inset 0px 0px 20px rgba(255, 255, 255, .4)',\n                transform:'scale(1.01)',\n                transition:'all .2s ease-out'\n            }\n        }\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    teamNameAway: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 16,\n        color:'white',\n        textTransform:'uppercase',\n        margin:0,\n        marginLeft:10,\n        textAlign:'left'\n    },\n    scoreAway: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 52,\n        margin:0,\n        color:'white',\n        marginLeft:10,\n        textAlign:'left',\n        width:'100%',\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 32\n        }\n    },\n    teamNameHome: {\n        fontFamily: 'Roboto Mono',\n        textTransform:'uppercase',\n        fontSize: 16,\n        color:'white',\n        margin:0,\n        marginRight:10,\n        textAlign:'right'\n    },\n    scoreHome: {\n        fontFamily: 'Roboto Mono',\n        fontSize: 50,\n        color:'white',\n        margin:0,\n        marginRight:10,\n        textAlign:'right',\n        [theme.breakpoints.down('xs')]: {\n            fontSize: 32\n        }\n    },\n    centerSpread: {\n        alignItems: 'center',\n        padding:20,\n        color:'white',\n        // borderRadius:20,\n        // background:'rgba(255,255,255,.1)',\n        borderRight:'1px solid white',\n        borderLeft:'1px solid white',\n        display:'block'\n    },\n    quarter: {\n        margin:0,\n        fontFamily:'roboto'\n    },\n    timeRemaining: {\n        margin:0,\n        marginTop:10\n    },\n    stats: {\n        display: 'inline-block',\n        width:'100%',\n    },\n    vl: {\n        position: 'relative',\n        borderLeft: '2px solid #EFEFEF',\n        height: 15.5,\n        left: '50%'\n    },\n    logo: {\n        height: 200,\n        width: 200,\n        marginLeft:'-50%',\n        marginTop:'-50%',\n        [theme.breakpoints.down('xs')]: {\n            display:'none'\n        }\n    },\n    logoContainer: {\n        position:'relative',\n        overflow:'hidden',\n        width:100,\n        maxWidth: '100%',\n        height:100,\n        borderRadius: '100%',\n        // border:'5px solid black',\n        backgroundColor:'rgba(255,255,255,.2)',\n        [theme.breakpoints.down('xs')]: {\n            width: 20,\n            height: 20,\n            // backgroundColor: props.lightColorHex,\n        }\n    }\n}));\n\n\nconst NbaGameCard = (props) => {\n    const classes = useStyles();\n    const [isOpen, setIsOpen] = useState(false);\n\n\n    // const routes = {\n    //     '/': () => <Home />,\n    //     '/teamOneColor': () => <SetColor />,\n    //     '/teamTwoColor': () => <SetColor />,\n    // };\n    // const routeResults = useRoutes(routes);\n\n    const toggleModal = () => {\n        setIsOpen(true);\n    }\n\n    const closeScreen = () => {\n        setIsOpen(false)\n    }\n\n    const getShortName = (teamName) => {\n        const teamData = nbaLogoMap.find(team => teamName.includes(team.mascot))\n        return teamData.short\n    }\n\n    const setTeams = (hTeam, aTeam) => {\n        toggleModal()\n        props.setHomeTeam(hTeam)\n        props.setAwayTeam(aTeam)\n        props.setSingleGameData({ //change this logic -- we need to get the info from all games and search for specfiic game there @TODO\n            homeTeam: props.homeTeam,\n            awayTeam: props.awayTeam,\n            homeScore: props.homeScore,\n            awayScore: props.awayScore,\n            gameTime: props.gameTime\n        })\n    }\n\n    const getLogoUrl = (teamName) => {\n        const team = nbaLogoMap.find(team => teamName.includes(team.mascot))\n        return team.logoURL\n    }\n\n    return (\n        <div className={classes.root} >\n            <Grid container className={classes.center} onClick={() => setTeams(props.homeTeam, props.awayTeam)}>\n                <Grid item xs={2}>\n                        <div className={classes.logoContainer}>\n                            <img className={classes.logo} src={getLogoUrl(props.awayTeam)}></img>\n                        </div>\n                </Grid>\n                <Grid item xs={3}>\n                        <div className={classes.stats}>\n                            <p className={classes.teamNameAway}>{getShortName(props.awayTeam)}</p>\n                            <p className={classes.scoreAway}>{props.awayScore}</p>\n                        </div>\n                </Grid>\n                <Grid item xs={2}>\n                    <div className={classes.centerSpread}>\n                        <p className={classes.quarter}>{props.quarter}Q | { props.minutesRemaining }:{ (props.secondsRemaining > 9) ? props.secondsRemaining : '0' + props.secondsRemaining }</p>\n                    </div>\n                </Grid>\n                <Grid item xs={3}>\n                        <div className={classes.stats}>\n                            <p className={classes.teamNameHome}>{getShortName(props.homeTeam)}</p>\n                            <p className={classes.scoreHome}>{props.homeScore}</p>\n                        </div>\n                </Grid>\n                <Grid item xs={2}>\n                        <div className={classes.logoContainer}>\n                            <img className={classes.logo} src={getLogoUrl(props.homeTeam)}></img>\n                        </div>\n                </Grid>\n            </Grid>\n            <PickColors toggleModal={toggleModal} isOpen={isOpen} closeScreen={closeScreen} setAwayColor={props.setAwayColor} setHomeColor={props.setHomeColor} awayTeam={props.awayTeam} homeTeam={props.homeTeam} setGameView={props.setGameView} />\n        </div>\n    );\n}\n\nexport default NbaGameCard\n"]},"metadata":{},"sourceType":"module"}